// Code generated by goctl. DO NOT EDIT.
// goctl 1.8.1
// Source: user.proto

package server

import (
	"context"
	"user-rpc/internal/logic"
	"user-rpc/internal/svc"
	"user-rpc/pb/user"
)

type UserServer struct {
	svcCtx *svc.ServiceContext
	user.UnimplementedUserServer
}

func NewUserServer(svcCtx *svc.ServiceContext) *UserServer {
	return &UserServer{
		svcCtx: svcCtx,
	}
}

func (s *UserServer) Login(ctx context.Context, in *user.LoginRequest) (*user.LoginResponse, error) {
	l := logic.NewLoginLogic(ctx, s.svcCtx)
	return l.Login(in)
}

func (s *UserServer) List(ctx context.Context, in *user.ListRequest) (*user.ListResponse, error) {
	l := logic.NewListLogic(ctx, s.svcCtx)
	return l.List(in)
}

func (s *UserServer) Create(ctx context.Context, in *user.CreateUserRequest) (*user.CreateUserResponse, error) {
	l := logic.NewCreateLogic(ctx, s.svcCtx)
	return l.Create(in)
}

func (s *UserServer) Update(ctx context.Context, in *user.UpdateUserRequest) (*user.UpdateUserResponse, error) {
	l := logic.NewUpdateLogic(ctx, s.svcCtx)
	return l.Update(in)
}

func (s *UserServer) Delete(ctx context.Context, in *user.DeleteUserRequest) (*user.DeleteUserResponse, error) {
	l := logic.NewDeleteLogic(ctx, s.svcCtx)
	return l.Delete(in)
}

func (s *UserServer) Detail(ctx context.Context, in *user.DetailRequest) (*user.DetailResponse, error) {
	l := logic.NewDetailLogic(ctx, s.svcCtx)
	return l.Detail(in)
}
