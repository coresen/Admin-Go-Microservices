// Code generated by goctl. DO NOT EDIT.
// goctl 1.8.1
// Source: menu.proto

package menuclient

import (
	"context"
	"menu-rpc/pb/menu"

	"github.com/zeromicro/go-zero/zrpc"
	"google.golang.org/grpc"
)

type (
	CreateRequest  = menu.CreateRequest
	CreateResponse = menu.CreateResponse
	DetailRequest  = menu.DetailRequest
	DetailResponse = menu.DetailResponse
	ListRequest    = menu.ListRequest
	ListResponse   = menu.ListResponse
	RemoveRequest  = menu.RemoveRequest
	RemoveResponse = menu.RemoveResponse
	UpdateRequest  = menu.UpdateRequest
	UpdateResponse = menu.UpdateResponse

	Menu interface {
		Create(ctx context.Context, in *CreateRequest, opts ...grpc.CallOption) (*CreateResponse, error)
		Update(ctx context.Context, in *UpdateRequest, opts ...grpc.CallOption) (*UpdateResponse, error)
		Detail(ctx context.Context, in *DetailRequest, opts ...grpc.CallOption) (*DetailResponse, error)
		Delete(ctx context.Context, in *RemoveRequest, opts ...grpc.CallOption) (*RemoveResponse, error)
		List(ctx context.Context, in *ListRequest, opts ...grpc.CallOption) (*ListResponse, error)
	}

	defaultMenu struct {
		cli zrpc.Client
	}
)

func NewMenu(cli zrpc.Client) Menu {
	return &defaultMenu{
		cli: cli,
	}
}

func (m *defaultMenu) Create(ctx context.Context, in *CreateRequest, opts ...grpc.CallOption) (*CreateResponse, error) {
	client := menu.NewMenuClient(m.cli.Conn())
	return client.Create(ctx, in, opts...)
}

func (m *defaultMenu) Update(ctx context.Context, in *UpdateRequest, opts ...grpc.CallOption) (*UpdateResponse, error) {
	client := menu.NewMenuClient(m.cli.Conn())
	return client.Update(ctx, in, opts...)
}

func (m *defaultMenu) Detail(ctx context.Context, in *DetailRequest, opts ...grpc.CallOption) (*DetailResponse, error) {
	client := menu.NewMenuClient(m.cli.Conn())
	return client.Detail(ctx, in, opts...)
}

func (m *defaultMenu) Delete(ctx context.Context, in *RemoveRequest, opts ...grpc.CallOption) (*RemoveResponse, error) {
	client := menu.NewMenuClient(m.cli.Conn())
	return client.Delete(ctx, in, opts...)
}

func (m *defaultMenu) List(ctx context.Context, in *ListRequest, opts ...grpc.CallOption) (*ListResponse, error) {
	client := menu.NewMenuClient(m.cli.Conn())
	return client.List(ctx, in, opts...)
}
