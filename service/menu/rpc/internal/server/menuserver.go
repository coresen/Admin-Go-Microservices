// Code generated by goctl. DO NOT EDIT.
// goctl 1.8.1
// Source: menu.proto

package server

import (
	"context"

	"zore/service/menu/rpc/internal/logic"
	"zore/service/menu/rpc/internal/svc"
	"zore/service/menu/rpc/pb/menu"
)

type MenuServer struct {
	svcCtx *svc.ServiceContext
	menu.UnimplementedMenuServer
}

func NewMenuServer(svcCtx *svc.ServiceContext) *MenuServer {
	return &MenuServer{
		svcCtx: svcCtx,
	}
}

func (s *MenuServer) Create(ctx context.Context, in *menu.CreateRequest) (*menu.CreateResponse, error) {
	l := logic.NewCreateLogic(ctx, s.svcCtx)
	return l.Create(in)
}

func (s *MenuServer) Update(ctx context.Context, in *menu.UpdateRequest) (*menu.UpdateResponse, error) {
	l := logic.NewUpdateLogic(ctx, s.svcCtx)
	return l.Update(in)
}

func (s *MenuServer) Detail(ctx context.Context, in *menu.DetailRequest) (*menu.DetailResponse, error) {
	l := logic.NewDetailLogic(ctx, s.svcCtx)
	return l.Detail(in)
}

func (s *MenuServer) Delete(ctx context.Context, in *menu.RemoveRequest) (*menu.RemoveResponse, error) {
	l := logic.NewDeleteLogic(ctx, s.svcCtx)
	return l.Delete(in)
}

func (s *MenuServer) List(ctx context.Context, in *menu.ListRequest) (*menu.ListResponse, error) {
	l := logic.NewListLogic(ctx, s.svcCtx)
	return l.List(in)
}
